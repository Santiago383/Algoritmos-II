program grafo;

uses
	sysutils;

type
	tAristas = array [1..12,1..12] of integer;
	tVertices = array[1..12] of integer;
	tGrafo = record
		vertices:tVertices;
		aristas:tAristas;
	end;
	tArista = record
		origen,destino:integer;
	end;
	tRuta = array [1..12] of tArista;	
	
var
	galaxia:tGrafo;
	origen:integer;
	ruta:tRuta;
	i,j:integer;
	


procedure galaxiaVacia(var g:tGrafo);

begin

	for i:=1 to 12 do
	begin
		for j:=1 to 12 do
			g.aristas[i,j]:=0;
	end;

end;



procedure mostrarGalaxia(g:tGrafo);

begin

	for i:=1 to 12 do
	begin
		for j:=1 to 12 do
		begin
			write(format('%3d',[g.aristas[i,j]]),' ');
		end;
		writeln;	
	end;	

end;



procedure rutaVacia(var r:tRuta);

begin

	for i:=1 to 12 do
	begin
		r[i].origen:=999;
		r[i].destino:=999;
	end;

end;



procedure mostrarRuta(r:tRuta);

begin

	for i:=1 to 12 do
	begin
		if (r[i].destino <> 999) and (r[i].destino <> r[i-1].destino) then
		begin
			write(r[i].origen,' > ');
			writeln(r[i].destino);
		end;
	end;

end;



function distancia(g:tGrafo;o:integer;var r:tRuta):integer;

var
	rutaMin,distanciaActual,k:integer;
	rutaEncontrada:boolean;
  
begin

	if o = 12 then
	exit(0);

	rutaMin:=999;
	rutaEncontrada:=false;

	for k:=1 to 12 do
	begin
		if g.aristas[o,k] <> 0 then
		begin
			distanciaActual:=g.aristas[o,k]+distancia(g,k,r);
			
			if distanciaActual < rutaMin then
			begin
				rutaMin:=distanciaActual;
				r[o].origen:=o;
				r[o].destino:=k;
				rutaEncontrada:=true;
			end;
		end;
	end;

	if not rutaEncontrada then
	begin
		r[o].origen:=o;
		r[o].destino:=-1; 
	end;

	exit(rutaMin);
  
end;

	
	
	
begin
	
	galaxiaVacia(galaxia);
	galaxia.aristas[1,2]:=5;galaxia.aristas[1,3]:=7;galaxia.aristas[1,4]:=12;
	galaxia.aristas[2,3]:=4;galaxia.aristas[2,4]:=8;
	galaxia.aristas[3,4]:=7;galaxia.aristas[3,5]:=11;galaxia.aristas[3,6]:=18;
	galaxia.aristas[4,5]:=4;galaxia.aristas[4,6]:=10;galaxia.aristas[4,7]:=19;
	galaxia.aristas[5,6]:=7;galaxia.aristas[5,8]:=24;
	galaxia.aristas[6,7]:=8;galaxia.aristas[6,8]:=16;galaxia.aristas[6,9]:=24;
	galaxia.aristas[7,8]:=11;galaxia.aristas[7,9]:=17;galaxia.aristas[7,10]:=28;galaxia.aristas[7,12]:=42;
	galaxia.aristas[8,9]:=8;galaxia.aristas[8,10]:=13;
	galaxia.aristas[9,10]:=9;
	galaxia.aristas[10,11]:=10;galaxia.aristas[10,12]:=18;
	galaxia.aristas[11,12]:=7;
	
	mostrarGalaxia(galaxia);

	rutaVacia(ruta);
	
	writeln;
	write('Ingrese el planeta de origen: ');
	readln(origen);
	distancia(galaxia,origen,ruta);
	writeln;
	writeln('La ruta mas corta es la siguiente:');
	mostrarRuta(ruta);
	
end.	
