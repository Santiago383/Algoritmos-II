program tp1ej2;

var 
	num:integer;

function fibonacci (n:integer):integer;
	
begin
	
	if n in [0,1] then
	begin
		if n = 0 then
		begin
			fibonacci:=0;
		end
		else
		begin
			fibonacci:=1;
		end;
	end
	else 
	begin
	    if n > 1 then
    	begin
    		fibonacci:=fibonacci(n-1)+fibonacci(n-2);
    	end
    	else
    	begin
    		fibonacci:=-1;
    	end;
    end;	
	
end;

begin

	readln(num);
	if fibonacci(num) <> -1 then
	begin
	    writeln('el ',num+1,'esimo termino de la serie es ',fibonacci(num));
	end
	else
	begin
	    writeln('ingrese un nro mayor o igual a cero');
	end;
	
end.

{------------------------------------------------------------------------}

program tp1ej3;

var
	p:string;

procedure invertirPalabra (s:string);

begin

	
	if length(s)=1 then    {si la longitud es uno escribe la primer y unica letra, si no escribe la ultima letra y despues la corta del string y llama}
	begin                    {al procedimiento de nuevo}
		write(s[1]);
	end
	else
	begin
		write(s[length(s)]);
		delete(s,length(s),1);
		invertirPalabra(s);
	end;

end;

begin

	readln(p);
	writeln;
	invertirPalabra(p);
	
end.

{------------------------------------------------------------------------}

program tp1ej8;

type
	tArray = array [1..10] of integer;

var	
	arr:tArray = (1,2,3,4,5,6,7,8,9,10);
	num,i:integer;

function busquedaBin (a:tArray;n,ini,fin:integer):integer;

var
    m:integer;

begin
    
    m:=(ini+fin) div 2;
    if ini > fin then
    begin
        busquedaBin:=0;
    end
    else if n = a[m] then
    begin
        busquedaBin:=m;
    end
    else if n < a[m] then
    begin
        busquedaBin:=busquedaBin(a,n,ini,m-1);
    end
    else
    begin
        busquedaBin:=busquedaBin(a,n,m+1,fin);
    end;
    
end;

begin

	for i:=1 to 10 do
    begin
        write(arr[i],' ');
    end;
	
	writeln;
	write('ingrese el numero entero que desea buscar: ');
	readln(num);
	writeln;
	if busquedaBin(arr,num,1,10) <> 0 then
    begin
        writeln('el numero esta en la posicion ',busquedaBin(arr,num,1,10))
    end
    else
    begin
        writeln('el numero no esta en el array');
    end;
	
end.

{------------------------------------------------------------------------}

program tp1ej9;

var
	base,exp:integer;

function potencia (x,y:integer):integer;

    begin
    
        if y = 0 then
        begin
            potencia:=1;
        end
        else
        begin
            if y > 0 then
            begin
                potencia:=x*potencia(x,y-1);
            end;
        end;
    
    end;

begin
    
    write('ingrese base: ');
    readln(base);
    write('ingrese exponente: ');
    readln(exp);
    writeln(potencia(base,exp));

end.

{------------------------------------------------------------------------}

program tp1ej10;

var
	num1,num2:integer;

function mcd (n,m,d1,d2:integer):integer;  {d1 y d2 (d es por divisor) son el primer y el segundo nro respectivamente}

begin
	
	if n < m then
	begin
		if (m mod d1 = 0) and ((n mod d1 = 0) or (n mod d2 = 0)) then    {la primera vez que entra lo que viene despues del and es redundante,}
		begin                                                               {si el menor es divisor del mayor el bucle termina}
			mcd:= d1;  
		end
		else
		begin
			mcd:=mcd(n,m,d1-1,d1-1);    {una vez determinado cual es el menor de los dos nros ambos 'divisores' pasan a ser el numero mas chico menos uno}
		end;                            {y asi sigue el bucle hasta que se encuentra el mcd}
	end
	else
	begin
		if (n mod d2 = 0) and ((m mod d1 = 0) or (m mod d2 = 0)) then
		begin
			mcd:= d2;
		end
		else
		begin
			mcd:=mcd(n,m,d2-1,d2-1);
		end;
	end;
	
end;

begin
	
	readln(num1);
	readln(num2);
	writeln(mcd(num1,num2,num1,num2));
	
end.
